/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package uHotDrawFramework;


import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import javax.tools.Tool;
import uTools.uAbstractTool;

/**
 *
 * @author oscar
 */
public class uDrawingView extends javax.swing.JPanel implements MouseListener, MouseMotionListener{

    private uDrawing drawing;
    
    private uDrawingEditor editor;
    
    


    
    

    public uDrawingEditor getEditor() {
        return editor;
    }

    public void setEditor(uDrawingEditor editor) {
        this.editor = editor;
    }
    
    

    public uDrawing getDrawing() {
        return drawing;
    }

    public void setDrawing(uDrawing drawing) {
        this.drawing = drawing;
    }
    
    
    
    @Override
    public void paint(Graphics graphics){
        this.drawing.draw(graphics);
    }
    /**
     * Creates new form uDrawingView
     */
    public uDrawingView() {
        super();
        this.addMouseListener(this);
        this.addMouseMotionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
    public uAbstractTool tool(){
        return editor.getCurrentTool();
 }

    @Override
    public void mouseClicked(MouseEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent aEvent){
        System.out.println("press");
        tool().mouseDown(aEvent);
        this.getEditor().repaint();
 }

    @Override
    public void mouseReleased(MouseEvent aEvent){
        System.out.println("Released");
        tool().mouseUp(aEvent);
        this.getEditor().repaint();
    }


    @Override
    public void mouseEntered(MouseEvent e) {
       System.out.println("Entered");
    }

    @Override
    public void mouseExited(MouseEvent e) {
       System.out.println("Exit");
    }

    @Override
    public void mouseDragged(MouseEvent aEvent){
        System.out.println("Dragged");
        tool().mouseDrag(aEvent);
        this.getEditor().repaint();
    }


    @Override
    public void mouseMoved(MouseEvent aEvent){
        System.out.println("Moved");
        tool().mouseMove(aEvent);
        this.getEditor().repaint();
 } 

}
